.TH "QKlipperUpdateState" 3 "Version 0.2" "QKlipper" \" -*- nroff -*-
.ad l
.nh
.SH NAME
QKlipperUpdateState
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <qklipperupdatestate\&.h>\fP
.PP
Inherits QObject\&.
.SS "Public Slots"

.in +1c
.ti -1c
.RI "void \fBsetIsBusy\fP (bool \fBisBusy\fP)"
.br
.ti -1c
.RI "void \fBsetGithubRateLimit\fP (qint32 \fBgithubRateLimit\fP)"
.br
.ti -1c
.RI "void \fBsetGithubRequestsRemaining\fP (qint32 \fBgithubRequestsRemaining\fP)"
.br
.ti -1c
.RI "void \fBsetGithubLimitResetTime\fP (qint32 \fBgithubLimitResetTime\fP)"
.br
.ti -1c
.RI "void \fBsetSystemPackageCount\fP (qint32 \fBsystemPackageCount\fP)"
.br
.ti -1c
.RI "void \fBsetSystemPackages\fP (const QStringList &\fBsystemPackages\fP)"
.br
.ti -1c
.RI "void \fBsetPackages\fP (const QMultiMap< QString, \fBQKlipperUpdatePackage\fP > &\fBpackages\fP)"
.br
.in -1c
.SS "Signals"

.in +1c
.ti -1c
.RI "void \fBisBusyChanged\fP ()"
.br
.ti -1c
.RI "void \fBgithubRateLimitChanged\fP ()"
.br
.ti -1c
.RI "void \fBgithubRequestsRemainingChanged\fP ()"
.br
.ti -1c
.RI "void \fBgithubLimitResetTimeChanged\fP ()"
.br
.ti -1c
.RI "void \fBsystemPackageCountChanged\fP ()"
.br
.ti -1c
.RI "void \fBsystemPackagesChanged\fP ()"
.br
.ti -1c
.RI "void \fBpackagesChanged\fP ()"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBQKlipperUpdateState\fP (QObject *parent=nullptr)"
.br
.ti -1c
.RI "bool \fBisBusy\fP () const"
.br
.ti -1c
.RI "qint32 \fBgithubRateLimit\fP () const"
.br
.ti -1c
.RI "qint32 \fBgithubRequestsRemaining\fP () const"
.br
.ti -1c
.RI "qint32 \fBgithubLimitResetTime\fP () const"
.br
.ti -1c
.RI "qint32 \fBsystemPackageCount\fP () const"
.br
.ti -1c
.RI "QStringList \fBsystemPackages\fP () const"
.br
.ti -1c
.RI "QMultiMap< QString, \fBQKlipperUpdatePackage\fP > \fBpackages\fP () const"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "bool \fBisBusy\fP"
.br
.ti -1c
.RI "qint32 \fBgithubRateLimit\fP"
.br
.ti -1c
.RI "qint32 \fBgithubRequestsRemaining\fP"
.br
.ti -1c
.RI "qint32 \fBgithubLimitResetTime\fP"
.br
.ti -1c
.RI "qint32 \fBsystemPackageCount\fP"
.br
.ti -1c
.RI "QStringList \fBsystemPackages\fP"
.br
.ti -1c
.RI "QMultiMap< QString, \fBQKlipperUpdatePackage\fP > \fBpackages\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "QKlipperUpdateState::QKlipperUpdateState (QObject * parent = \fCnullptr\fP)\fC [explicit]\fP"

.SH "Member Function Documentation"
.PP 
.SS "qint32 QKlipperUpdateState::githubLimitResetTime () const"

.SS "void QKlipperUpdateState::githubLimitResetTimeChanged ()\fC [signal]\fP"

.SS "qint32 QKlipperUpdateState::githubRateLimit () const"

.SS "void QKlipperUpdateState::githubRateLimitChanged ()\fC [signal]\fP"

.SS "qint32 QKlipperUpdateState::githubRequestsRemaining () const"

.SS "void QKlipperUpdateState::githubRequestsRemainingChanged ()\fC [signal]\fP"

.SS "bool QKlipperUpdateState::isBusy () const"

.SS "void QKlipperUpdateState::isBusyChanged ()\fC [signal]\fP"

.SS "QMultiMap< QString, \fBQKlipperUpdatePackage\fP > QKlipperUpdateState::packages () const"

.SS "void QKlipperUpdateState::packagesChanged ()\fC [signal]\fP"

.SS "void QKlipperUpdateState::setGithubLimitResetTime (qint32 githubLimitResetTime)\fC [slot]\fP"

.SS "void QKlipperUpdateState::setGithubRateLimit (qint32 githubRateLimit)\fC [slot]\fP"

.SS "void QKlipperUpdateState::setGithubRequestsRemaining (qint32 githubRequestsRemaining)\fC [slot]\fP"

.SS "void QKlipperUpdateState::setIsBusy (bool isBusy)\fC [slot]\fP"

.SS "void QKlipperUpdateState::setPackages (const QMultiMap< QString, \fBQKlipperUpdatePackage\fP > & packages)\fC [slot]\fP"

.SS "void QKlipperUpdateState::setSystemPackageCount (qint32 systemPackageCount)\fC [slot]\fP"

.SS "void QKlipperUpdateState::setSystemPackages (const QStringList & systemPackages)\fC [slot]\fP"

.SS "qint32 QKlipperUpdateState::systemPackageCount () const"

.SS "void QKlipperUpdateState::systemPackageCountChanged ()\fC [signal]\fP"

.SS "QStringList QKlipperUpdateState::systemPackages () const"

.SS "void QKlipperUpdateState::systemPackagesChanged ()\fC [signal]\fP"

.SH "Property Documentation"
.PP 
.SS "qint32 QKlipperUpdateState::githubLimitResetTime\fC [read]\fP, \fC [write]\fP"

.SS "qint32 QKlipperUpdateState::githubRateLimit\fC [read]\fP, \fC [write]\fP"

.SS "qint32 QKlipperUpdateState::githubRequestsRemaining\fC [read]\fP, \fC [write]\fP"

.SS "bool QKlipperUpdateState::isBusy\fC [read]\fP, \fC [write]\fP"

.SS "QMultiMap<QString, \fBQKlipperUpdatePackage\fP> QKlipperUpdateState::packages\fC [read]\fP, \fC [write]\fP"

.SS "qint32 QKlipperUpdateState::systemPackageCount\fC [read]\fP, \fC [write]\fP"

.SS "QStringList QKlipperUpdateState::systemPackages\fC [read]\fP, \fC [write]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for QKlipper from the source code\&.
