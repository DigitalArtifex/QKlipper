.TH "QKlipperMCU" 3 "Version 0.2" "QKlipper" \" -*- nroff -*-
.ad l
.nh
.SH NAME
QKlipperMCU \- \fBQKlipperMCU\fP class\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <qklippermcu\&.h>\fP
.PP
Inherits QObject\&.
.SS "Signals"

.in +1c
.ti -1c
.RI "void \fBbaudRateChanged\fP ()"
.br
.ti -1c
.RI "void \fBsequenceRecievedChanged\fP ()"
.br
.ti -1c
.RI "void \fBsequenceSentChanged\fP ()"
.br
.ti -1c
.RI "void \fBsequenceRetransmittedChanged\fP ()"
.br
.ti -1c
.RI "void \fBbytesInvalidChanged\fP ()"
.br
.ti -1c
.RI "void \fBbytesReadChanged\fP ()"
.br
.ti -1c
.RI "void \fBbytesRetransmittedChanged\fP ()"
.br
.ti -1c
.RI "void \fBbytesWrittenChanged\fP ()"
.br
.ti -1c
.RI "void \fBbytesUpcomingChanged\fP ()"
.br
.ti -1c
.RI "void \fBbytesAvailableChanged\fP ()"
.br
.ti -1c
.RI "void \fBfrequencyChanged\fP ()"
.br
.ti -1c
.RI "void \fBserialChanged\fP ()"
.br
.ti -1c
.RI "void \fBfirmwareVersionChanged\fP ()"
.br
.ti -1c
.RI "void \fBhardwareVersionChanged\fP ()"
.br
.ti -1c
.RI "void \fBawakeChanged\fP ()"
.br
.ti -1c
.RI "void \fBtaskAverageChanged\fP ()"
.br
.ti -1c
.RI "void \fBdevAverageChanged\fP ()"
.br
.ti -1c
.RI "void \fBmaxStepperErrorChanged\fP ()"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBQKlipperMCU\fP (QObject *parent=nullptr)"
.br
.RI "Constructor\&. "
.ti -1c
.RI "\fBQKlipperMCU\fP (const \fBQKlipperMCU\fP &value)"
.br
.ti -1c
.RI "\fBQKlipperMCU\fP (\fBQKlipperMCU\fP &&value)"
.br
.ti -1c
.RI "\fBQKlipperMCU\fP & \fBoperator=\fP (const \fBQKlipperMCU\fP &value)"
.br
.ti -1c
.RI "\fBQKlipperMCU\fP & \fBoperator=\fP (\fBQKlipperMCU\fP &&value)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBQKlipperMCU\fP &value)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBQKlipperMCU\fP &&value)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBQKlipperMCU\fP &value)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (\fBQKlipperMCU\fP &&value)"
.br
.ti -1c
.RI "qint64 \fBbaudRate\fP () const"
.br
.RI "Baud rate of the MCU's serial device\&. "
.ti -1c
.RI "qint64 \fBsequenceRecieved\fP () const"
.br
.RI "Number of sequences received\&. "
.ti -1c
.RI "qint64 \fBsequenceSent\fP () const"
.br
.RI "Number of sequences sent\&. "
.ti -1c
.RI "qint64 \fBsequenceRetransmitted\fP () const"
.br
.RI "Number of sequences re-sent after failure\&. "
.ti -1c
.RI "qint64 \fBbytesInvalid\fP () const"
.br
.RI "Number of bytes received that were invalid\&. "
.ti -1c
.RI "qint64 \fBbytesRead\fP () const"
.br
.RI "Number of bytes received that were read\&. "
.ti -1c
.RI "qint64 \fBbytesRetransmitted\fP () const"
.br
.RI "Number of bytes received that were retransmitted\&. "
.ti -1c
.RI "qint64 \fBbytesWritten\fP () const"
.br
.RI "Number of bytes sent that were actually written\&. "
.ti -1c
.RI "qint64 \fBbytesUpcoming\fP () const"
.br
.RI "Number of bytes that are going to be received\&. "
.ti -1c
.RI "qint64 \fBbytesAvailable\fP () const"
.br
.RI "Number of bytes that are available to be read\&. "
.ti -1c
.RI "qint64 \fBfrequency\fP () const"
.br
.RI "Frequency of the MCU (Hz) "
.ti -1c
.RI "QString \fBserial\fP () const"
.br
.RI "Serial ID of the MCU\&. "
.ti -1c
.RI "QString \fBfirmwareVersion\fP () const"
.br
.RI "Firmware version of the MCU\&. "
.ti -1c
.RI "QString \fBhardwareVersion\fP () const"
.br
.RI "Hardware version of the MCU\&. "
.ti -1c
.RI "qreal \fBawake\fP () const"
.br
.RI "Uptime of the MCU\&. "
.ti -1c
.RI "qreal \fBtaskAverage\fP () const"
.br
.RI "Average task time of the MCU\&. "
.ti -1c
.RI "qreal \fBdevAverage\fP () const"
.br
.RI "Average dev time of the MCU\&. "
.ti -1c
.RI "qreal \fBmaxStepperError\fP () const"
.br
.RI "Max stepper error setting of the MCU\&. "
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "qint64 \fBbaudRate\fP"
.br
.ti -1c
.RI "qint64 \fBsequenceRecieved\fP"
.br
.ti -1c
.RI "qint64 \fBsequenceSent\fP"
.br
.ti -1c
.RI "qint64 \fBsequenceRetransmitted\fP"
.br
.ti -1c
.RI "qint64 \fBbytesInvalid\fP"
.br
.ti -1c
.RI "qint64 \fBbytesRead\fP"
.br
.ti -1c
.RI "qint64 \fBbytesRetransmitted\fP"
.br
.ti -1c
.RI "qint64 \fBbytesWritten\fP"
.br
.ti -1c
.RI "qint64 \fBbytesUpcoming\fP"
.br
.ti -1c
.RI "qint64 \fBbytesAvailable\fP"
.br
.ti -1c
.RI "qint64 \fBfrequency\fP"
.br
.ti -1c
.RI "QString \fBserial\fP"
.br
.ti -1c
.RI "QString \fBfirmwareVersion\fP"
.br
.ti -1c
.RI "QString \fBhardwareVersion\fP"
.br
.ti -1c
.RI "qreal \fBawake\fP"
.br
.ti -1c
.RI "qreal \fBtaskAverage\fP"
.br
.ti -1c
.RI "qreal \fBdevAverage\fP"
.br
.ti -1c
.RI "qreal \fBmaxStepperError\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBQKlipperMCU\fP class\&. 

This class is responsible for holding the data related to the current MCU\&. There are no methods to change any of the parameters and all changes must be done in the configuration files 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "QKlipperMCU::QKlipperMCU (QObject * parent = \fCnullptr\fP)\fC [explicit]\fP"

.PP
Constructor\&. 
.PP
\fBParameters\fP
.RS 4
\fIparent\fP The parent object 
.RE
.PP

.SS "QKlipperMCU::QKlipperMCU (const \fBQKlipperMCU\fP & value)"

.SS "QKlipperMCU::QKlipperMCU (\fBQKlipperMCU\fP && value)"

.SH "Member Function Documentation"
.PP 
.SS "qreal QKlipperMCU::awake () const"

.PP
Uptime of the MCU\&. 
.PP
\fBReturns\fP
.RS 4
Uptime of the MCU 
.RE
.PP

.SS "void QKlipperMCU::awakeChanged ()\fC [signal]\fP"

.SS "qint64 QKlipperMCU::baudRate () const"

.PP
Baud rate of the MCU's serial device\&. 
.PP
\fBReturns\fP
.RS 4
The baud rate 
.RE
.PP

.SS "void QKlipperMCU::baudRateChanged ()\fC [signal]\fP"

.SS "qint64 QKlipperMCU::bytesAvailable () const"

.PP
Number of bytes that are available to be read\&. 
.PP
\fBReturns\fP
.RS 4
The number of bytes that are available to be read 
.RE
.PP

.SS "void QKlipperMCU::bytesAvailableChanged ()\fC [signal]\fP"

.SS "qint64 QKlipperMCU::bytesInvalid () const"

.PP
Number of bytes received that were invalid\&. 
.PP
\fBReturns\fP
.RS 4
The number of bytes that were invalid 
.RE
.PP

.SS "void QKlipperMCU::bytesInvalidChanged ()\fC [signal]\fP"

.SS "qint64 QKlipperMCU::bytesRead () const"

.PP
Number of bytes received that were read\&. 
.PP
\fBReturns\fP
.RS 4
The number of bytes that were read 
.RE
.PP

.SS "void QKlipperMCU::bytesReadChanged ()\fC [signal]\fP"

.SS "qint64 QKlipperMCU::bytesRetransmitted () const"

.PP
Number of bytes received that were retransmitted\&. 
.PP
\fBReturns\fP
.RS 4
The number of bytes that were retransmitted 
.RE
.PP

.SS "void QKlipperMCU::bytesRetransmittedChanged ()\fC [signal]\fP"

.SS "qint64 QKlipperMCU::bytesUpcoming () const"

.PP
Number of bytes that are going to be received\&. 
.PP
\fBReturns\fP
.RS 4
The number of bytes that are going to be received 
.RE
.PP

.SS "void QKlipperMCU::bytesUpcomingChanged ()\fC [signal]\fP"

.SS "qint64 QKlipperMCU::bytesWritten () const"

.PP
Number of bytes sent that were actually written\&. 
.PP
\fBReturns\fP
.RS 4
The number of bytes that were written 
.RE
.PP

.SS "void QKlipperMCU::bytesWrittenChanged ()\fC [signal]\fP"

.SS "qreal QKlipperMCU::devAverage () const"

.PP
Average dev time of the MCU\&. 
.PP
\fBReturns\fP
.RS 4
Average task dev of the MCU 
.RE
.PP

.SS "void QKlipperMCU::devAverageChanged ()\fC [signal]\fP"

.SS "QString QKlipperMCU::firmwareVersion () const"

.PP
Firmware version of the MCU\&. 
.PP
\fBReturns\fP
.RS 4
Firmware version of the MCU 
.RE
.PP

.SS "void QKlipperMCU::firmwareVersionChanged ()\fC [signal]\fP"

.SS "qint64 QKlipperMCU::frequency () const"

.PP
Frequency of the MCU (Hz) 
.PP
\fBReturns\fP
.RS 4
Frequency of the MCU (Hz) 
.RE
.PP

.SS "void QKlipperMCU::frequencyChanged ()\fC [signal]\fP"

.SS "QString QKlipperMCU::hardwareVersion () const"

.PP
Hardware version of the MCU\&. 
.PP
\fBReturns\fP
.RS 4
Hardware version of the MCU 
.RE
.PP

.SS "void QKlipperMCU::hardwareVersionChanged ()\fC [signal]\fP"

.SS "qreal QKlipperMCU::maxStepperError () const"

.PP
Max stepper error setting of the MCU\&. 
.PP
\fBReturns\fP
.RS 4
Max stepper error setting of the MCU 
.RE
.PP

.SS "void QKlipperMCU::maxStepperErrorChanged ()\fC [signal]\fP"

.SS "bool QKlipperMCU::operator!= (const \fBQKlipperMCU\fP & value)"

.SS "bool QKlipperMCU::operator!= (\fBQKlipperMCU\fP && value)"

.SS "\fBQKlipperMCU\fP & QKlipperMCU::operator= (const \fBQKlipperMCU\fP & value)"

.SS "\fBQKlipperMCU\fP & QKlipperMCU::operator= (\fBQKlipperMCU\fP && value)"

.SS "bool QKlipperMCU::operator== (const \fBQKlipperMCU\fP & value)"

.SS "bool QKlipperMCU::operator== (\fBQKlipperMCU\fP && value)"

.SS "qint64 QKlipperMCU::sequenceRecieved () const"

.PP
Number of sequences received\&. 
.PP
\fBReturns\fP
.RS 4
The number of sequences received 
.RE
.PP

.SS "void QKlipperMCU::sequenceRecievedChanged ()\fC [signal]\fP"

.SS "qint64 QKlipperMCU::sequenceRetransmitted () const"

.PP
Number of sequences re-sent after failure\&. 
.PP
\fBReturns\fP
.RS 4
The number of sequences re-sent 
.RE
.PP

.SS "void QKlipperMCU::sequenceRetransmittedChanged ()\fC [signal]\fP"

.SS "qint64 QKlipperMCU::sequenceSent () const"

.PP
Number of sequences sent\&. 
.PP
\fBReturns\fP
.RS 4
The number of sequences sent 
.RE
.PP

.SS "void QKlipperMCU::sequenceSentChanged ()\fC [signal]\fP"

.SS "QString QKlipperMCU::serial () const"

.PP
Serial ID of the MCU\&. 
.PP
\fBReturns\fP
.RS 4
Serial ID of the MCU 
.RE
.PP

.SS "void QKlipperMCU::serialChanged ()\fC [signal]\fP"

.SS "qreal QKlipperMCU::taskAverage () const"

.PP
Average task time of the MCU\&. 
.PP
\fBReturns\fP
.RS 4
Average task time of the MCU 
.RE
.PP

.SS "void QKlipperMCU::taskAverageChanged ()\fC [signal]\fP"

.SH "Property Documentation"
.PP 
.SS "qreal QKlipperMCU::awake\fC [read]\fP, \fC [write]\fP"

.SS "qint64 QKlipperMCU::baudRate\fC [read]\fP, \fC [write]\fP"

.SS "qint64 QKlipperMCU::bytesAvailable\fC [read]\fP, \fC [write]\fP"

.SS "qint64 QKlipperMCU::bytesInvalid\fC [read]\fP, \fC [write]\fP"

.SS "qint64 QKlipperMCU::bytesRead\fC [read]\fP, \fC [write]\fP"

.SS "qint64 QKlipperMCU::bytesRetransmitted\fC [read]\fP, \fC [write]\fP"

.SS "qint64 QKlipperMCU::bytesUpcoming\fC [read]\fP, \fC [write]\fP"

.SS "qint64 QKlipperMCU::bytesWritten\fC [read]\fP, \fC [write]\fP"

.SS "qreal QKlipperMCU::devAverage\fC [read]\fP, \fC [write]\fP"

.SS "QString QKlipperMCU::firmwareVersion\fC [read]\fP, \fC [write]\fP"

.SS "qint64 QKlipperMCU::frequency\fC [read]\fP, \fC [write]\fP"

.SS "QString QKlipperMCU::hardwareVersion\fC [read]\fP, \fC [write]\fP"

.SS "qreal QKlipperMCU::maxStepperError\fC [read]\fP, \fC [write]\fP"

.SS "qint64 QKlipperMCU::sequenceRecieved\fC [read]\fP, \fC [write]\fP"

.SS "qint64 QKlipperMCU::sequenceRetransmitted\fC [read]\fP, \fC [write]\fP"

.SS "qint64 QKlipperMCU::sequenceSent\fC [read]\fP, \fC [write]\fP"

.SS "QString QKlipperMCU::serial\fC [read]\fP, \fC [write]\fP"

.SS "qreal QKlipperMCU::taskAverage\fC [read]\fP, \fC [write]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for QKlipper from the source code\&.
