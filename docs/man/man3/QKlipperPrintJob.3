.TH "QKlipperPrintJob" 3 "Version 0.2" "QKlipper" \" -*- nroff -*-
.ad l
.nh
.SH NAME
QKlipperPrintJob
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <qklipperprintjob\&.h>\fP
.PP
Inherits QObject\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBState\fP { \fBStandby\fP, \fBPrinting\fP, \fBPaused\fP, \fBComplete\fP, \fBCancelled\fP, \fBError\fP }"
.br
.in -1c
.SS "Public Slots"

.in +1c
.ti -1c
.RI "void \fBsetState\fP (\fBState\fP \fBstate\fP)"
.br
.RI "PrintJob::setState handles the signalling of state changes in the job\&. "
.ti -1c
.RI "void \fBsetState\fP (QString \fBstate\fP)"
.br
.RI "PrintJob::setState handles the signalling of state changes in the job\&. "
.ti -1c
.RI "void \fBsetMessage\fP (const QString &\fBmessage\fP)"
.br
.ti -1c
.RI "void \fBsetTotalDuration\fP (qreal \fBtotalDuration\fP)"
.br
.ti -1c
.RI "void \fBsetPrintDuration\fP (qreal \fBprintDuration\fP)"
.br
.ti -1c
.RI "void \fBsetFilamentUsed\fP (qreal \fBfilamentUsed\fP)"
.br
.ti -1c
.RI "void \fBsetTotalLayers\fP (qint64 \fBtotalLayers\fP)"
.br
.ti -1c
.RI "void \fBsetCurrentLayer\fP (qint64 \fBcurrentLayer\fP)"
.br
.in -1c
.SS "Signals"

.in +1c
.ti -1c
.RI "void \fBfilenameChanged\fP ()"
.br
.ti -1c
.RI "void \fBidChanged\fP ()"
.br
.ti -1c
.RI "void \fBtimeAddedChanged\fP ()"
.br
.ti -1c
.RI "void \fBtimeInQueueChanged\fP ()"
.br
.ti -1c
.RI "void \fBstateChanged\fP ()"
.br
.ti -1c
.RI "void \fBmessageChanged\fP ()"
.br
.ti -1c
.RI "void \fBtotalDurationChanged\fP ()"
.br
.ti -1c
.RI "void \fBprintDurationChanged\fP ()"
.br
.ti -1c
.RI "void \fBfilamentUsedChanged\fP ()"
.br
.ti -1c
.RI "void \fBtotalLayersChanged\fP ()"
.br
.ti -1c
.RI "void \fBcurrentLayerChanged\fP ()"
.br
.ti -1c
.RI "void \fBstarted\fP (\fBQKlipperPrintJob\fP *job)"
.br
.ti -1c
.RI "void \fBfinished\fP (\fBQKlipperPrintJob\fP *job)"
.br
.ti -1c
.RI "void \fBcancelled\fP (\fBQKlipperPrintJob\fP *job)"
.br
.ti -1c
.RI "void \fBerror\fP (\fBQKlipperPrintJob\fP *job)"
.br
.ti -1c
.RI "void \fBpaused\fP (\fBQKlipperPrintJob\fP *job)"
.br
.ti -1c
.RI "void \fBresumed\fP (\fBQKlipperPrintJob\fP *job)"
.br
.ti -1c
.RI "void \fBstandby\fP (\fBQKlipperPrintJob\fP *job)"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBQKlipperPrintJob\fP (QObject *parent=nullptr)"
.br
.ti -1c
.RI "QString \fBfilename\fP () const"
.br
.ti -1c
.RI "void \fBsetFilename\fP (const QString &\fBfilename\fP)"
.br
.ti -1c
.RI "QString \fBid\fP () const"
.br
.ti -1c
.RI "void \fBsetId\fP (const QString &\fBid\fP)"
.br
.ti -1c
.RI "qreal \fBtimeAdded\fP () const"
.br
.ti -1c
.RI "void \fBsetTimeAdded\fP (qreal \fBtimeAdded\fP)"
.br
.ti -1c
.RI "qreal \fBtimeInQueue\fP () const"
.br
.ti -1c
.RI "void \fBsetTimeInQueue\fP (qreal \fBtimeInQueue\fP)"
.br
.ti -1c
.RI "\fBState\fP \fBstate\fP () const"
.br
.ti -1c
.RI "QString \fBmessage\fP () const"
.br
.ti -1c
.RI "qreal \fBtotalDuration\fP () const"
.br
.ti -1c
.RI "qreal \fBprintDuration\fP () const"
.br
.ti -1c
.RI "qreal \fBfilamentUsed\fP () const"
.br
.ti -1c
.RI "qint64 \fBtotalLayers\fP () const"
.br
.ti -1c
.RI "qint64 \fBcurrentLayer\fP () const"
.br
.ti -1c
.RI "qreal \fBprogress\fP () const"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "QString \fBfilename\fP"
.br
.ti -1c
.RI "QString \fBid\fP"
.br
.ti -1c
.RI "qreal \fBtimeAdded\fP"
.br
.ti -1c
.RI "qreal \fBtimeInQueue\fP"
.br
.ti -1c
.RI "\fBState\fP \fBstate\fP"
.br
.ti -1c
.RI "QString \fBmessage\fP"
.br
.ti -1c
.RI "qreal \fBtotalDuration\fP"
.br
.ti -1c
.RI "qreal \fBprintDuration\fP"
.br
.ti -1c
.RI "qreal \fBfilamentUsed\fP"
.br
.ti -1c
.RI "qint64 \fBtotalLayers\fP"
.br
.ti -1c
.RI "qint64 \fBcurrentLayer\fP"
.br
.in -1c
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBQKlipperPrintJob::State\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIStandby \fP\fP
.TP
\fB\fIPrinting \fP\fP
.TP
\fB\fIPaused \fP\fP
.TP
\fB\fIComplete \fP\fP
.TP
\fB\fICancelled \fP\fP
.TP
\fB\fIError \fP\fP
.SH "Constructor & Destructor Documentation"
.PP 
.SS "QKlipperPrintJob::QKlipperPrintJob (QObject * parent = \fCnullptr\fP)\fC [explicit]\fP"

.SH "Member Function Documentation"
.PP 
.SS "void QKlipperPrintJob::cancelled (\fBQKlipperPrintJob\fP * job)\fC [signal]\fP"

.SS "qint64 QKlipperPrintJob::currentLayer () const"

.SS "void QKlipperPrintJob::currentLayerChanged ()\fC [signal]\fP"

.SS "void QKlipperPrintJob::error (\fBQKlipperPrintJob\fP * job)\fC [signal]\fP"

.SS "qreal QKlipperPrintJob::filamentUsed () const"

.SS "void QKlipperPrintJob::filamentUsedChanged ()\fC [signal]\fP"

.SS "QString QKlipperPrintJob::filename () const"

.SS "void QKlipperPrintJob::filenameChanged ()\fC [signal]\fP"

.SS "void QKlipperPrintJob::finished (\fBQKlipperPrintJob\fP * job)\fC [signal]\fP"

.SS "QString QKlipperPrintJob::id () const"

.SS "void QKlipperPrintJob::idChanged ()\fC [signal]\fP"

.SS "QString QKlipperPrintJob::message () const"

.SS "void QKlipperPrintJob::messageChanged ()\fC [signal]\fP"

.SS "void QKlipperPrintJob::paused (\fBQKlipperPrintJob\fP * job)\fC [signal]\fP"

.SS "qreal QKlipperPrintJob::printDuration () const"

.SS "void QKlipperPrintJob::printDurationChanged ()\fC [signal]\fP"

.SS "qreal QKlipperPrintJob::progress () const"

.SS "void QKlipperPrintJob::resumed (\fBQKlipperPrintJob\fP * job)\fC [signal]\fP"

.SS "void QKlipperPrintJob::setCurrentLayer (qint64 currentLayer)\fC [slot]\fP"

.SS "void QKlipperPrintJob::setFilamentUsed (qreal filamentUsed)\fC [slot]\fP"

.SS "void QKlipperPrintJob::setFilename (const QString & filename)"

.SS "void QKlipperPrintJob::setId (const QString & id)"

.SS "void QKlipperPrintJob::setMessage (const QString & message)\fC [slot]\fP"

.SS "void QKlipperPrintJob::setPrintDuration (qreal printDuration)\fC [slot]\fP"

.SS "void QKlipperPrintJob::setState (QString state)\fC [slot]\fP"

.PP
PrintJob::setState handles the signalling of state changes in the job\&. Set this value last in updates 
.PP
\fBParameters\fP
.RS 4
\fIstate\fP 
.RE
.PP

.SS "void QKlipperPrintJob::setState (\fBState\fP state)\fC [slot]\fP"

.PP
PrintJob::setState handles the signalling of state changes in the job\&. Set this value last in updates 
.PP
\fBParameters\fP
.RS 4
\fIstate\fP 
.RE
.PP

.SS "void QKlipperPrintJob::setTimeAdded (qreal timeAdded)"

.SS "void QKlipperPrintJob::setTimeInQueue (qreal timeInQueue)"

.SS "void QKlipperPrintJob::setTotalDuration (qreal totalDuration)\fC [slot]\fP"

.SS "void QKlipperPrintJob::setTotalLayers (qint64 totalLayers)\fC [slot]\fP"

.SS "void QKlipperPrintJob::standby (\fBQKlipperPrintJob\fP * job)\fC [signal]\fP"

.SS "void QKlipperPrintJob::started (\fBQKlipperPrintJob\fP * job)\fC [signal]\fP"

.SS "\fBQKlipperPrintJob::State\fP QKlipperPrintJob::state () const"

.SS "void QKlipperPrintJob::stateChanged ()\fC [signal]\fP"

.SS "qreal QKlipperPrintJob::timeAdded () const"

.SS "void QKlipperPrintJob::timeAddedChanged ()\fC [signal]\fP"

.SS "qreal QKlipperPrintJob::timeInQueue () const"

.SS "void QKlipperPrintJob::timeInQueueChanged ()\fC [signal]\fP"

.SS "qreal QKlipperPrintJob::totalDuration () const"

.SS "void QKlipperPrintJob::totalDurationChanged ()\fC [signal]\fP"

.SS "qint64 QKlipperPrintJob::totalLayers () const"

.SS "void QKlipperPrintJob::totalLayersChanged ()\fC [signal]\fP"

.SH "Property Documentation"
.PP 
.SS "qint64 QKlipperPrintJob::currentLayer\fC [read]\fP, \fC [write]\fP"

.SS "qreal QKlipperPrintJob::filamentUsed\fC [read]\fP, \fC [write]\fP"

.SS "QString QKlipperPrintJob::filename\fC [read]\fP, \fC [write]\fP"

.SS "QString QKlipperPrintJob::id\fC [read]\fP, \fC [write]\fP"

.SS "QString QKlipperPrintJob::message\fC [read]\fP, \fC [write]\fP"

.SS "qreal QKlipperPrintJob::printDuration\fC [read]\fP, \fC [write]\fP"

.SS "\fBState\fP QKlipperPrintJob::state\fC [read]\fP, \fC [write]\fP"

.SS "qreal QKlipperPrintJob::timeAdded\fC [read]\fP, \fC [write]\fP"

.SS "qreal QKlipperPrintJob::timeInQueue\fC [read]\fP, \fC [write]\fP"

.SS "qreal QKlipperPrintJob::totalDuration\fC [read]\fP, \fC [write]\fP"

.SS "qint64 QKlipperPrintJob::totalLayers\fC [read]\fP, \fC [write]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for QKlipper from the source code\&.
